.\" manpage for filterfasta program.
.TH FILTERFASTA 1 "26 February 2014" "2.0" "Manpage for filterfasta program"
.SH NAME

filterfasta 
.RS
\-(normal mode) extract sequences from an input query file in FASTA format and write to output file in FASTA format
.br

\-(pipeline mode) serve as pipeline program between BLAST and HMMER/MUSCLE
.RE
.SH SYNOPSIS
.HP 
\fBfilterfasta\fR 
\fB-q\fR \fIinfile\fR
[\fB-h\fR]
[\fB-v\fR]
[\fB-o\fR \fIoutfile\fR]
[\fB-c\fR \fIseqCount\fR]
[\fB-l\fR \fIseqLength\fR | \fB-l\fR \fIseqLength1\fR\fB:\fR\fIseqLength2\fR]
[\fB-a\fR \fIannotCnt\fR]
[\fB-b\fR \fIbytesLimit\fR]
[\fB-t\fR \fIblastTable\fR \fB-p\fR \fIpipeProg\fR]
.SH DESCRIPTION
\fBfilterfasta\fR is a program for parsing files in FASTA format which contain amino acid sequences of proteins/nucleotides.
.P
It can be used in two modes:
.br
\-(normal mode) Extract sequences from a FASTA input query file, \fIinfile\fR, and write them in FASTA format to an output file, \fIoutfile\fR.
.br
\-(pipeline mode) Extract sequences from a FASTA input query file, \fIinfile\fR, that match hits in a BLAST table file, \fIblastTable\fR, and writes them in FASTA format to an output file, \fIoutfile\fR, that is used as input to HMMER/MUSCLE. This mode is enabled if a BLAST table file, \fIblastTable\fR, is provided and the pipe option, \fIpipeProg\fR, is set. 
.P
The \fBfilterfasta\fR program uses command line options to allow the user to control which sequences to extract for output by specifying the maximum amount of sequences to extract, the exact length (or ranged lengths) of amino acids, the sequence annotation fields to maintain, and/or the maximum size in bytes allowed for \fIoutfile\fR.
.P
The \fBfilterfasta\fR program expects as input a well-formed FASTA file. It is up to the user to meet this requirement prior to using this tool. The following are the set of conditions \fBfilterfasta\fR expects from a FASTA file:
.br

.RS
1. A sequence begins with a single-line description (i.e. annotations) that begins with the '>' (greater-than) symbol and ends with a newline character, followed by lines of sequence data.
.br

2. The annotations are composed of several fields delimited by the '|' (vertical bar) symbol.
.br

3. Sequence data ends when a newline character is found and next line begins with '>' (greater-than).
.br

4. Blank lines are not allowed in the middle of a FASTA file.
.br

5. \fBfilterfasta\fR does not validate the characters used for a sequence data, so the user should make sure that sequence data is correct.
.RE
.SH OPTIONS
The command line is parsed according to the following convention. Command line options can be specified in any order. For options that should be specified only once, only the last setting will be used. Short options are specified using a single '-' (minus character). For short options either a whitespace or a '=' (equal sign) between a command line option and its argument is optional. For long options either a whitespace or a '=' (equal sign) between a command line option and its argument is mandatory. Long options are specified using a pair '--' (minus character).
.P
The following options should be supported:
.HP
\fB-q\fR \fIinfile\fR, \fB--query=\fR\fIinfile\fR
.br
Specify an input query file in FASTA format to be processed in a top-down manner. If this is the only command line option set, then \fBfilterfasta\fR will output the same contents \fIinfile\fR has. Behavior is undefined for \fIinfile\fR that is not in FASTA format.
.br
.HP
\fB-h\fR, \fB--help\fR
.br
Display help menu and exit.
.br
.HP
\fB-v\fR, \fB--verbose\fR
.br
Turn "ON" verbose setting. This option controls the types of messages written to STDOUT.
.br
.HP
\fB-o\fR \fIoutfile\fR, \fB--output=\fR\fIoutfile\fR
.br
Specify an output file to write the extracted sequences. Default \fIoutfile\fR is "filter.out".
.br
.HP
\fB-c\fR \fIseqCount\fR, \fB--count=\fR\fIseqCount\fR
.br
Maximum number of sequences to extract from input query file, \fIinfile\fR. The sequences extracted depend on the command line options specified. Since the input file is processed in a top-down manner, only the first \fIseqCount\fR sequences will be extracted. Default \fIseqCount\fR is "unlimited".
.br
.HP
\fB-l\fR \fIseqLength\fR, \fB--length=\fR\fIseqLength\fR
.br
(Exact lengths) Extract sequences of exactly \fIseqLength\fR amino acids. This option can be specified up to 5 times in the command line options, where the sequences extracted will have exactly one of those lengths in amino acids. Note that multiple exact lengths do not count as range lengths. This option is ignored if using \fBfilterfasta\fR in pipeline mode.
.br
.HP
\fB-l\fR \fIseqLength1\fR\fB:\fR\fIseqLength2\fR, \fB--length=\fR\fIseqLength1\fR\fB:\fR\fIseqLength2\fR
.br
(Range lengths) Extract sequences that contain at least \fIseqLength1\fR amino acids and at most \fIseqLength2\fR amino acids. If \fIseqLength1\fR is not given then the extracted sequences will contain at least 1 amino acid. If \fIseqLength2\fR is not given then the extracted sequences will contain at most an unlimited amount of amino acids. This option can be specified up to 5 times in the command line options, where the sequences extracted will have an amount of amino acids that obey any of the length ranges. Note that multiple range lengths do not count as exact lengths. This option is ignored if using \fBfilterfasta\fR in pipeline mode.
.br
.HP
\fB-a\fR \fIannotCnt\fR, \fB--annot=\fR\fIannotCnt\fR
.br
Extract the first \fIannotCnt\fR fields from the FASTA annotations for each of the extracted sequences. (-1=ALL, #=first # annotation fields)
.br
.HP
\fB-b\fR \fIbytesLimit\fR, \fB--bytes=\fR\fIbytesLimit\fR
.br
Limit the output file to a size of \fIbytesLimit\fR bytes if a larger output file was to be produced due to the other command line options. The output file will not always be of exactly \fIbytesLimit\fR bytes but will never exceed it, since sequences are written only if the selected annotation fields and the complete sequence fits into the output file. It is allowed to append the suffixes (KB|MB|GB) to the numeric value of \fIbytesLimit\fR. 
.br
.HP
\fB-t\fR \fIblastTable\fR, \fB--table=\fR\fIblastTable\fR
.br
Specify a BLAST results file in tabular form to match the hit IDs against the query IDs of the input query file, \fIinfile\fR. The matching sequences are extracted and written to output file(s). Providing a BLAST table, \fIblastTable\fR, and a pipe setting, \fIpipeProg\fR, enables pipeline mode. 
.br
.HP
\fB-p\fR \fIpipeProg\fR, \fB--pipe=\fR\fIpipeProg\fR
.br
Specify the pipeline program to be used: \fIpipeProg\fR=0 (NONE), \fIpipeProg\fR=1 (HMMER), \fIpipeProg\fR=2 (MUSCLE). Providing a BLAST table, \fIblastTable\fR, and a pipe setting, \fIpipeProg\fR, enables pipeline mode. 
.br
.SH EXAMPLES
(normal mode) Extract up to 100 sequences, including their first 5 annotation fields, of exactly 200 or between 300 and 400 amino acids in length:
.br

.RS
\fBfilterfasta\fR \fB-q\fR queryFile.txt \fB-v\fR \fB-o\fR file.out \fB-c\fR 100 \fB-a\fR 5 \fB-l\fR 200 \fB-l\fR 300:400
.RE

(normal mode) Extract all sequences, with none annotations, of 80 or less amino acids in length and limit output file size to 4MB:
.br

.RS
\fBfilterfasta\fR \fB-q\fR queryFile.txt \fB-v\fR \fB-o\fR file.out \fB-a\fR 0 \fB-l\fR :80 \fB-b\fR 4MB
.RE

(pipeline mode) Extract all sequences, including all annotation fields, of any length that match hit IDs in BLAST table file to be pipelined with HMMER program:
.br

.RS
\fBfilterfasta\fR \fB-q\fR queryFile.txt \fB-v\fR \fB-o\fR file.out \fB-t\fR blastTable.txt \fB-p\fR 1
.RE
.SH EXIT STATUS
The following exit values shall be returned:
.br

 0	Successful completion
.br

-1	An error occurred
.br

-2	Configuration error
.SH BUGS
Report bugs and typos to \fIeponcemo@utk.edu\fR.
.SH AUTHOR
Written by Eduardo Ponce (\fIeponcemo@utk.edu\fR).
.SH COPYRIGHT
This is free software.
